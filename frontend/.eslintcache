[{"/Users/alexisbalayre/fastocks/frontend/src/index.js":"1","/Users/alexisbalayre/fastocks/frontend/src/App.js":"2","/Users/alexisbalayre/fastocks/frontend/src/reportWebVitals.js":"3","/Users/alexisbalayre/fastocks/frontend/src/Tracking/PrivateRoute.js":"4","/Users/alexisbalayre/fastocks/frontend/src/API/ProfileCreateUpdate.js":"5","/Users/alexisbalayre/fastocks/frontend/src/API/ProfilesService.js":"6","/Users/alexisbalayre/fastocks/frontend/src/Tracking/Auth.js":"7","/Users/alexisbalayre/fastocks/frontend/src/Tracking/UseToken.js":"8","/Users/alexisbalayre/fastocks/frontend/src/Screens/Public/Home.js":"9","/Users/alexisbalayre/fastocks/frontend/src/Screens/Public/Login.js":"10","/Users/alexisbalayre/fastocks/frontend/src/Screens/Public/Register.js":"11","/Users/alexisbalayre/fastocks/frontend/src/Screens/Private/ProfileHome.js":"12","/Users/alexisbalayre/fastocks/frontend/src/Screens/Private/CreationSuivi.js":"13","/Users/alexisbalayre/fastocks/frontend/src/Screens/Private/Dashboard.js":"14","/Users/alexisbalayre/fastocks/frontend/src/Screens/Private/ParametresSuivi.js":"15","/Users/alexisbalayre/fastocks/frontend/src/Screens/Private/Reglages.js":"16","/Users/alexisbalayre/fastocks/frontend/src/Screens/Private/ChangePassword.js":"17","/Users/alexisbalayre/fastocks/frontend/src/Tracking/Informations.js":"18"},{"size":500,"mtime":1615664666101,"results":"19","hashOfConfig":"20"},{"size":5397,"mtime":1616071903258,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1611855185572,"results":"22","hashOfConfig":"20"},{"size":504,"mtime":1614867079519,"results":"23","hashOfConfig":"20"},{"size":3470,"mtime":1614867072296,"results":"24","hashOfConfig":"20"},{"size":1814,"mtime":1616527429766,"results":"25","hashOfConfig":"20"},{"size":162,"mtime":1614867077799,"results":"26","hashOfConfig":"20"},{"size":749,"mtime":1615660239547,"results":"27","hashOfConfig":"20"},{"size":340,"mtime":1615797428592,"results":"28","hashOfConfig":"20"},{"size":4756,"mtime":1616072027574,"results":"29","hashOfConfig":"20"},{"size":8609,"mtime":1616447597533,"results":"30","hashOfConfig":"20"},{"size":258,"mtime":1615814081044,"results":"31","hashOfConfig":"20"},{"size":273,"mtime":1615751032456,"results":"32","hashOfConfig":"20"},{"size":261,"mtime":1615751422439,"results":"33","hashOfConfig":"20"},{"size":284,"mtime":1615797259866,"results":"34","hashOfConfig":"20"},{"size":9845,"mtime":1616527088709,"results":"35","hashOfConfig":"20"},{"size":4101,"mtime":1616527811169,"results":"36","hashOfConfig":"20"},{"size":5747,"mtime":1616071805729,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1kk8z52",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/alexisbalayre/fastocks/frontend/src/index.js",[],["77","78"],"/Users/alexisbalayre/fastocks/frontend/src/App.js",[],"/Users/alexisbalayre/fastocks/frontend/src/reportWebVitals.js",[],"/Users/alexisbalayre/fastocks/frontend/src/Tracking/PrivateRoute.js",[],"/Users/alexisbalayre/fastocks/frontend/src/API/ProfileCreateUpdate.js",[],["79","80"],"/Users/alexisbalayre/fastocks/frontend/src/API/ProfilesService.js",[],"/Users/alexisbalayre/fastocks/frontend/src/Tracking/Auth.js",[],"/Users/alexisbalayre/fastocks/frontend/src/Tracking/UseToken.js",[],"/Users/alexisbalayre/fastocks/frontend/src/Screens/Public/Home.js",[],"/Users/alexisbalayre/fastocks/frontend/src/Screens/Public/Login.js",[],"/Users/alexisbalayre/fastocks/frontend/src/Screens/Public/Register.js",["81","82","83"],"import React, { useState } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport DatePicker, { registerLocale } from  \"react-datepicker\";\nimport fr from 'date-fns/locale/fr';\nimport {Alert} from 'react-bootstrap';\n\nimport ProfilesService from  '../../API/ProfilesService'\nimport { useAuth } from \"../../Tracking/Auth\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// Connexion à l'API\nconst profilesService = new ProfilesService();\n\n// Réglage de la langue du calendrier\nregisterLocale('fr', fr)\n\nfunction Register() {\n    const [gender, setGender] = useState(\"\");\n    const [birthDate, setBirthDate] = useState();\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [emailConfirm, setEmailConfirm] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n    const [isLoggedIn, setLoggedIn] = useState(false);\n    const [errorMail, setErrorMail] = useState(true);\n    const [errorPwd, setErrorPwd] = useState(true);\n    const [errorMessageEmail, setErrorMessageEmail] = useState(\"\");\n    const [errorMessagePwd, setErrorMessagePwd] = useState(\"\");\n    const [show, setShow] = useState(false);\n    const { setSessionToken, token,  setSessionInformations } = useAuth();\n\n    if (token) {\n      return <Redirect to={\"/myaccount\"} />;\n    }\n\n    const handleSubmit = async e => {\n      e.preventDefault();\n      \n      // vérification des emails entrées \n      if (email === emailConfirm) {\n        setErrorMail(false);\n        // vérification des mots de passe entrés \n        if (password === passwordConfirm) {\n          if (password.length >= 8) {\n            var x;\n            var y;\n            var checked1 = false;\n            var checked2 = false;\n            const symbols = ['#', '@', '&', '§', '!', '°', '*', '$', '¥', '€', '£', '%', '?', ';', '.', ':', '/', '+', '=', '<', '>', '-', '_', '{', '}', '(', ')', '[', ']']\n            for (x=0;x<10;x++) {\n              if (password.indexOf(x) !== -1) {\n                checked1 = true;\n                break;\n              }\n            }\n            if (!checked1) {\n              let err = <strong className=\"error\">Le mot de passe doit contenir au minimum 1 chiffre !</strong>;\n              setErrorMessagePwd(err);\n              setErrorPwd(true);\n            }\n            for (y in symbols) {\n              if (password.indexOf(symbols[y]) !== -1) {\n                checked2 = true;\n                break;\n              }\n            }\n            if (!checked2) {\n              let err = <strong className=\"error\">Le mot de passe doit contenir au minimum 1 caractère spécial !</strong>;\n              setErrorMessagePwd(err);\n              setErrorPwd(true);\n            }\n            else {\n              setErrorPwd(false);\n\n              // Formatage Date \n              var jour = birthDate.getDate().toString(); \n              if (jour.length === 1) {\n                jour = \"0\" + jour;\n              }\n              var mois = (birthDate.getMonth()+1).toString();\n              if (mois.length === 1) {\n                mois = \"0\" + mois;\n              }\n              var annee = birthDate.getFullYear().toString(); \n              const date = annee+'-'+mois+'-'+jour\n\n              // Requete API \n              profilesService.register({\n                \"gender\": gender,\n                \"birth_date\": date,\n                \"first_name\": firstName,\n                \"last_name\": lastName,\n                \"email\": email,\n                \"password\": password\n              }).then((result)=>{\n                setSessionToken({token: result.data.token});\n                setSessionInformations({\n                  id: {id: result.data.id_user},\n                  first_name: {first_name: result.data.first_name},\n                  last_name: {last_name: result.data.last_name},\n                  email: {email: result.data.email},\n                  phone: {phone: result.data.phone},\n                  alert_stock_email: {alert_stock_email: result.data.alert_stock_email},\n                  alert_price_email: {alert_price_email: result.data.alert_price_email},\n                  alert_stock_sms: {alert_stock_sms: result.data.alert_stock_sms},\n                  alert_price_sms: {alert_price_sms: result.data.alert_price_sms}\n                })\n                setLoggedIn(true);\n              }).catch(()=>{ \n                let err = <strong className=\"error\">L'adresse mail utilisée existe déjà !</strong>;\n                setErrorMessageEmail(err);\n                setErrorMail(true);\n              });\n            }\n          }\n          else{\n            let err = <strong className=\"error\">Le mot de passe doit contenir au minimum 8 caractères !</strong>;\n            setErrorMessagePwd(err);\n            setErrorPwd(true);\n          }\n        }\n        else {\n          let err = <strong className=\"error\">Les mots de passe saisis sont différents !</strong>;\n          setErrorMessagePwd(err);\n          setErrorPwd(true);\n        }\n      }\n      else {\n        let err = <strong className=\"error\">Les adresses email saisies sont différentes !</strong>;\n        setErrorMessageEmail(err);\n        setErrorMail(true);\n      }\n\n      if (!errorPwd) {\n        setErrorMessagePwd(\"\");\n      }\n      if (!errorMail) {\n        setErrorMessageEmail(\"\");\n      }\n    }\n\n    if (isLoggedIn) {\n      return <Redirect to={\"/myaccount\"} />;\n    }\n\n    var DateMax = new Date();\n\n    return (\n      <body className=\"text-center\">\n        <div className='safe-container'>\n          <main className=\"form-register\">\n            <form onSubmit={handleSubmit} >\n                <h1 className=\"h3 mb-3 fw-normal\">Création de votre compte Fastocks</h1>\n                <div className=\"gender\" autoFocus onChange={e => setGender(e.target.value)}>\n                  <div className=\"form-check form-check-inline\">\n                      <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value='F' required></input>\n                      <label className=\"form-check-label\" for=\"inlineRadio1\">Madame</label>\n                  </div>\n                  <div className=\"form-check form-check-inline\">\n                      <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value='M' required></input>\n                      <label className=\"form-check-label\" for=\"inlineRadio2\">Monsieur</label>\n                  </div>\n                </div>\n                <DatePicker \n                required\n                popperPlacement=\"auto\"\n                wrapperClassName=\"datePicker\" \n                className=\"form-control\" \n                id=\"birthdate\" \n                placeholderText='Date de naissance (JJ/MM/AAAA)' \n                locale={\"fr\"}\n                dateFormat=\"dd/MM/yyyy\"\n                selected={birthDate} \n                maxDate={DateMax.setDate(DateMax.getDate() - 4380)}\n                \n                onChange={date => setBirthDate(date)}/>\n                <input type=\"text\" id=\"lastname\" className=\"form-control\" placeholder=\"Nom de famille\" required onChange={e => setLastName(e.target.value)}></input>\n                <input type=\"text\" id=\"firstname\" className=\"form-control\" placeholder=\"Prénom\" required onChange={e => setFirstName(e.target.value)}></input>\n                <input type=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Adresse email\" autoComplete=\"on\" required  onChange={e => [setEmail(e.target.value), setErrorMessageEmail(\"\")]}></input>\n                <input type=\"email\" id=\"email-confirm\" className=\"form-control\" placeholder=\"Confirmation de l'adresse email\" required onChange={e => [setEmailConfirm(e.target.value), setErrorMessageEmail(\"\")]}></input>\n                {errorMessageEmail}\n                <input type=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Mot de passe\" required onChange={e => [setPassword(e.target.value), setErrorMessagePwd(\"\")]}></input>\n                <input type=\"password\" id=\"password-confirm\" className=\"form-control\" placeholder=\"Confirmation du mot de passe\" required onChange={e => [setPasswordConfirm(e.target.value), setErrorMessagePwd(\"\")]}></input>\n                {errorMessagePwd}\n                <button id=\"register-confirm\" className=\"w-100 btn btn-lg btn-primary\" type=\"submit\" value=\"submit\">Inscription</button>\n             </form>\n          </main>\n        </div>\n      </body>\n    );\n}  \n\nexport default Register;","/Users/alexisbalayre/fastocks/frontend/src/Screens/Private/ProfileHome.js",[],"/Users/alexisbalayre/fastocks/frontend/src/Screens/Private/CreationSuivi.js",[],"/Users/alexisbalayre/fastocks/frontend/src/Screens/Private/Dashboard.js",[],"/Users/alexisbalayre/fastocks/frontend/src/Screens/Private/ParametresSuivi.js",[],"/Users/alexisbalayre/fastocks/frontend/src/Screens/Private/Reglages.js",[],"/Users/alexisbalayre/fastocks/frontend/src/Screens/Private/ChangePassword.js",[],"/Users/alexisbalayre/fastocks/frontend/src/Tracking/Informations.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"84","replacedBy":"88"},{"ruleId":"86","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":5,"column":9,"nodeType":"92","messageId":"93","endLine":5,"endColumn":14},{"ruleId":"90","severity":1,"message":"94","line":32,"column":12,"nodeType":"92","messageId":"93","endLine":32,"endColumn":16},{"ruleId":"90","severity":1,"message":"95","line":32,"column":18,"nodeType":"92","messageId":"93","endLine":32,"endColumn":25},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],["96"],["97"],"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]